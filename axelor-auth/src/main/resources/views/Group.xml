<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://apps.axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://apps.axelor.com/xml/ns/object-views http://apps.axelor.com/xml/ns/object-views/object-views_0.9.xsd">

	<selection name="select.user.navigation">
		<option value="visible">Visible</option>
		<option value="hidden">Hidden</option>
		<option value="collapse">Collapse</option>
	</selection>

	<grid name="group-grid" title="Groups">
		<field name="name" />
		<field name="code" />
		<field name="restricted" />
		<field name="navigation" />
	</grid>

	<form name="group-form" title="Group">
		<toolbar>
			<button name="showPermissions" title="Show permissions"
				onClick="action-group-view-permissions" readonlyIf="!permissions" />
		</toolbar>
		<field name="name" validIf="name.length &gt;= 2" onChange="action-group-validData" />
		<field name="code" validIf="code.length &gt;= 2" onChange="action-group-validData" />
		<field name="navigation" />
		<field name="restricted" />
		<field name="permissions" colSpan="2" onChange="action-validate-group-permissions" showTitle="false">
			<grid title="Permissions">
				<field name="name" />
				<field name="object" />
			</grid>
		</field>
        <field name="roles" colSpan="2" grid-view="role-grid" form-view="role-form" showTitle="false" />
	</form>

	<action-method name="action-validate-group-permissions">
		<call class="com.axelor.auth.web.AuthValidator" method="validateGroup" />
	</action-method>

	<action-condition name="action-group-validData">
		<check error="Code length should be greater than 2." field="code" if="code?.length() &lt; 2" />
		<check error="Name length should be greater than 2." field="name" if="name?.length() &lt; 2" />
	</action-condition>

	<action-view name="action-group-view-permissions" title="Permissions" model="com.axelor.auth.db.Permission">
		<view type="grid" name="permission-grid" />
		<view type="form" name="permission-form" />
		<domain>self.id IN (:permissions)</domain>
		<context name="permissions" expr="eval: permissions.collect{it.id}?.join(',')" />
	</action-view>

</object-views>
